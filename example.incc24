{
    fun counter v -> struct {
        val := v;
        add := \x -> val := val + x;
        inc := \ -> add(1);
        dec := \ -> add(-1)
    };

    fun fact x ->
        if x = 0 then 1
	    else x * fact(x - 1);

    fun foldr f, z, l ->
        if l = nil then z
	    else f(head(l), foldr(f, z, tail(l)));

    fun foldl f, z, l ->
        if l = nil then z
	    else foldl(f, f(z, head(l)), tail(l));

    fun map f, l ->
	    foldr(\x,xs -> cons(f(x), xs), nil, l);

    fun filter f, l ->
        foldr(\x,xs -> if f(x) then cons(x, xs) else xs, nil, l)
}
