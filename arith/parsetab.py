
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionleftORNORleftANDNANDleftEQNEQBEQBNEQleftLTGTLEGEleftPLUSMINUSleftTIMESDIVIDEAND BEQ BNEQ BOOL_LIT DIVIDE EQ GE GT IMP LE LPAREN LT MINUS NAND NEQ NOR NOT NUMBER OR PLUS RPAREN TIMES\n    expression : arith_expression\n               | bool_expression\n    \n    arith_expression : arith_expression PLUS arith_expression\n                     | arith_expression MINUS arith_expression\n                     | arith_expression TIMES arith_expression\n                     | arith_expression DIVIDE arith_expression\n    bool_expression  : arith_expression LT arith_expression\n                     | arith_expression GT arith_expression\n                     | arith_expression LE arith_expression\n                     | arith_expression GE arith_expression\n                     | arith_expression EQ arith_expression\n                     | arith_expression NEQ arith_expression\n                     | bool_expression BEQ bool_expression\n                     | bool_expression BNEQ bool_expression\n                     | bool_expression AND bool_expression\n                     | bool_expression OR bool_expression\n                     | bool_expression NAND bool_expression\n                     | bool_expression NOR bool_expression\n                     | bool_expression IMP bool_expression\n    \n    bool_expression : NOT bool_expression\n    arith_expression : NUMBERbool_expression : BOOL_LIT\n    arith_expression : LPAREN arith_expression RPAREN\n    bool_expression : LPAREN bool_expression RPAREN\n    '
    
_lr_action_items = {'NUMBER':([0,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,29,31,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'LPAREN':([0,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,29,31,],[5,5,29,31,31,31,31,31,31,31,31,31,31,29,29,29,29,29,29,29,29,31,]),'NOT':([0,5,6,18,19,20,21,22,23,24,29,],[6,6,6,6,6,6,6,6,6,6,6,]),'BOOL_LIT':([0,5,6,18,19,20,21,22,23,24,29,],[7,7,7,7,7,7,7,7,7,7,7,]),'$end':([1,2,3,4,7,27,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[0,-1,-2,-21,-22,-20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-23,-24,]),'PLUS':([2,4,25,28,30,32,33,34,35,36,37,38,39,40,48,50,51,],[8,-21,8,8,-3,-4,-5,-6,8,8,8,8,8,8,-23,8,8,]),'MINUS':([2,4,25,28,30,32,33,34,35,36,37,38,39,40,48,50,51,],[9,-21,9,9,-3,-4,-5,-6,9,9,9,9,9,9,-23,9,9,]),'TIMES':([2,4,25,28,30,32,33,34,35,36,37,38,39,40,48,50,51,],[10,-21,10,10,10,10,-5,-6,10,10,10,10,10,10,-23,10,10,]),'DIVIDE':([2,4,25,28,30,32,33,34,35,36,37,38,39,40,48,50,51,],[11,-21,11,11,11,11,-5,-6,11,11,11,11,11,11,-23,11,11,]),'LT':([2,4,25,28,30,32,33,34,48,50,],[12,-21,12,12,-3,-4,-5,-6,-23,12,]),'GT':([2,4,25,28,30,32,33,34,48,50,],[13,-21,13,13,-3,-4,-5,-6,-23,13,]),'LE':([2,4,25,28,30,32,33,34,48,50,],[14,-21,14,14,-3,-4,-5,-6,-23,14,]),'GE':([2,4,25,28,30,32,33,34,48,50,],[15,-21,15,15,-3,-4,-5,-6,-23,15,]),'EQ':([2,4,25,28,30,32,33,34,48,50,],[16,-21,16,16,-3,-4,-5,-6,-23,16,]),'NEQ':([2,4,25,28,30,32,33,34,48,50,],[17,-21,17,17,-3,-4,-5,-6,-23,17,]),'BEQ':([3,4,7,26,27,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[18,-21,-22,18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,18,18,18,18,18,-23,-24,]),'BNEQ':([3,4,7,26,27,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[19,-21,-22,19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,19,19,19,19,19,-23,-24,]),'AND':([3,4,7,26,27,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[20,-21,-22,20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,20,-17,20,20,-23,-24,]),'OR':([3,4,7,26,27,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[21,-21,-22,21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,21,-23,-24,]),'NAND':([3,4,7,26,27,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[22,-21,-22,22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,22,-17,22,22,-23,-24,]),'NOR':([3,4,7,26,27,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[23,-21,-22,23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,23,-23,-24,]),'IMP':([3,4,7,26,27,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[24,-21,-22,24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,24,-23,-24,]),'RPAREN':([4,7,25,26,27,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,],[-21,-22,48,49,-20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-23,-24,48,48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,],[1,]),'arith_expression':([0,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,29,31,],[2,25,28,30,32,33,34,35,36,37,38,39,40,28,28,28,28,28,28,28,50,51,]),'bool_expression':([0,5,6,18,19,20,21,22,23,24,29,],[3,26,27,41,42,43,44,45,46,47,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> arith_expression','expression',1,'p_expression','airth_parser.py',16),
  ('expression -> bool_expression','expression',1,'p_expression','airth_parser.py',17),
  ('arith_expression -> arith_expression PLUS arith_expression','arith_expression',3,'p_expression_binary','airth_parser.py',23),
  ('arith_expression -> arith_expression MINUS arith_expression','arith_expression',3,'p_expression_binary','airth_parser.py',24),
  ('arith_expression -> arith_expression TIMES arith_expression','arith_expression',3,'p_expression_binary','airth_parser.py',25),
  ('arith_expression -> arith_expression DIVIDE arith_expression','arith_expression',3,'p_expression_binary','airth_parser.py',26),
  ('bool_expression -> arith_expression LT arith_expression','bool_expression',3,'p_expression_binary','airth_parser.py',27),
  ('bool_expression -> arith_expression GT arith_expression','bool_expression',3,'p_expression_binary','airth_parser.py',28),
  ('bool_expression -> arith_expression LE arith_expression','bool_expression',3,'p_expression_binary','airth_parser.py',29),
  ('bool_expression -> arith_expression GE arith_expression','bool_expression',3,'p_expression_binary','airth_parser.py',30),
  ('bool_expression -> arith_expression EQ arith_expression','bool_expression',3,'p_expression_binary','airth_parser.py',31),
  ('bool_expression -> arith_expression NEQ arith_expression','bool_expression',3,'p_expression_binary','airth_parser.py',32),
  ('bool_expression -> bool_expression BEQ bool_expression','bool_expression',3,'p_expression_binary','airth_parser.py',33),
  ('bool_expression -> bool_expression BNEQ bool_expression','bool_expression',3,'p_expression_binary','airth_parser.py',34),
  ('bool_expression -> bool_expression AND bool_expression','bool_expression',3,'p_expression_binary','airth_parser.py',35),
  ('bool_expression -> bool_expression OR bool_expression','bool_expression',3,'p_expression_binary','airth_parser.py',36),
  ('bool_expression -> bool_expression NAND bool_expression','bool_expression',3,'p_expression_binary','airth_parser.py',37),
  ('bool_expression -> bool_expression NOR bool_expression','bool_expression',3,'p_expression_binary','airth_parser.py',38),
  ('bool_expression -> bool_expression IMP bool_expression','bool_expression',3,'p_expression_binary','airth_parser.py',39),
  ('bool_expression -> NOT bool_expression','bool_expression',2,'p_expression_unary','airth_parser.py',45),
  ('arith_expression -> NUMBER','arith_expression',1,'p_expression_num','airth_parser.py',50),
  ('bool_expression -> BOOL_LIT','bool_expression',1,'p_expression_bool_lit','airth_parser.py',54),
  ('arith_expression -> LPAREN arith_expression RPAREN','arith_expression',3,'p_expression_paren','airth_parser.py',59),
  ('bool_expression -> LPAREN bool_expression RPAREN','bool_expression',3,'p_expression_paren','airth_parser.py',60),
]
